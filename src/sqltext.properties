#
# ApplicationBean related SQL statements
#

lookupApplicationInfo = \
    select passcode, currentOperatorNumberId, playDirectionAudio, modifiedGrammar \
    from application where applicationId = ?


updateApplicationInfo = \
    update application \
    set    passcode = ?, currentOperatorNumberId = ?, playDirectionAudio = ?, modifiedGrammar = ? \
    where  applicationId = ?

#
# ContactBean related SQL statements
#

lookupContacts = \
   select contactId, firstname, lastname, nickname, deptname, \
          isActive, distinctInfo, phoneticCode, contact.note, isVoicemailEnabled, audioName, email, \
          phonetypeid, number  \
   from  contact, phonenumber, ownertype \
   where contact.contactId = phonenumber.ownerId \
   and   phonenumber.ownertypeId = ownertype.ownertypeid \
   and   ownertype.name = 'contact' \
   order by contactId

lookupContactsByPhoneticCode = \
   select contactId, firstname, lastname, nickname, deptname, \
          isActive, distinctInfo, phoneticCode, contact.note, isVoicemailEnabled, audioName, email, \
          phonetypeid, number \
   from   contact, phonenumber, ownertype \
   where phoneticCode = ? \
   and   contact.contactId = phonenumber.ownerId \
   and   phonenumber.ownertypeId = ownertype.ownertypeid \
   and   ownertype.name = 'contact' \
   order by contactId

updateContact = \
   update contact \
   set firstname = ?, \
       lastname = ?, \
       nickname = ?, \
       deptname = ?, \
       isActive = ?, \
       distinctInfo = ?, \
       note = ?, \
       phoneticCode = ?, \
       isVoicemailEnabled = ?, \
       audioName = ?, \
       email = ? \
   where contactId = ?

deleteContact = \
   delete from contact \
   where contactId = ?

addContact = \
   insert into contact \
   (firstname, lastname, nickname, isActive, distinctInfo, phoneticCode, note, isVoicemailEnabled, audioName, email) \
   values \
   (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)

lookupLastContactId = \
   select contactId from contact \
   order by contactId desc

#
# AltSpellingBean related SQL statements
#

lookupAltSpellingByOwner = \
    select altspellingId, spelling, altspellingtypeId \
    from   altspelling \
    where  ownerId = ? and ownertypeId = ?

insertAltSpelling = \
    insert into altspelling (ownerId, ownertypeId, spelling, altspellingtypeId) \
    values (?, ?, ?, ?)

deleteAltSpelling = \
   delete from altspelling \
   where altspellingId = ?

updateAltSpelling = \
   update altspelling \
   set spelling = ? \
   where altSpellingId = ?

#
# PhoneNumber related SQL statements
#

lookupPhoneNumbersByOwner = \
   select phonenumberId, ownerId, phonetypeId, number, note \
   from phonenumber \
   where ownertypeId = ?

insertPhoneNumber = \
   insert into phonenumber \
   (ownerId, ownertypeId, phonetypeId, number, note) \
   values (?, ?, ?, ?, ?)

updatePhoneNumber = \
   update phonenumber \
   set number = ?, note = ? \
   where phonenumberId = ?

updatePhoneNumberByOwner = \
   update phonenumber \
   set number = ?, note = ? \
   where ownerId = ? and ownertypeId = ? and phonetypeId = ?

deletePhoneNumber = \
   delete from phonenumber \
   where phonenumberId = ?

deletePhoneNumbersByOwner = \
   delete from phonenumber \
   where ownerId = ? and ownertypeId = ?

#
# Prompts related SQL statements
#

lookupAllPrompts = \
   select promptId, name, audio, isActive \
   from prompt

updatePrompt = \
   update prompt \
   set isActive = ? \
   where promptId = ?

#
# EntityBean related SQL statements
#

lookupEntities = \
   select entityId, parentId, entity.name, isActive, entity.note, number, audioName \
   from  entity, phonenumber, ownertype \
   where phonenumber.ownerId = entityId \
   and phonenumber.ownertypeId = ownertype.ownertypeid \
   and ownertype.name = 'entity' \
   order by parentId

deleteEntity = \
   delete from entity \
   where entityId = ?

addEntity = \
   insert into entity \
   (parentId, name, isActive, note, audioName) \
   values \
   (?, ?, ?, ?, ?)

lookupLastEntityId = \
   select entityId from entity \
   order by entityId desc

updateEntity = \
   update entity \
   set name = ?, \
       isActive = ?, \
       note = ?, \
       audioName = ? \
   where entityId = ?

#
# Logger statements
#

insertLog = \
   insert into logger (start_timestamp, end_timestamp, caller_id, requested_id, ownertype_id, app_info_bits) \
   values (?, ?, ?, ?, ?, ?)

insertCancellation = \
   insert into cancellation (logger_id, cancelled_id, ownertype_id) \
   values (?, ?, ?)

createLoggerTable = \
   CREATE TABLE IF NOT EXISTS logger (\
      logger_id int(11) NOT NULL auto_increment,\
      start_timestamp timestamp(12),\
      end_timestamp timestamp(12),\
      caller_id varchar(10) NOT NULL,\
      requested_id int(11) DEFAULT '0' NOT NULL,\
      ownertype_id int(11) DEFAULT '0' NOT NULL,\
      app_info_bits int(11) DEFAULT '0' NOT NULL,\
      PRIMARY KEY (logger_id),\
      UNIQUE logger_id (logger_id)\
   );

createCancellationTable = \
   CREATE TABLE IF NOT EXISTS cancellation (\
      logger_id int(11) DEFAULT '0' NOT NULL,\
      cancelled_id int(11) DEFAULT '0' NOT NULL,\
      ownertype_id int(11) DEFAULT '0' NOT NULL\
   );

#
# Misc
#
#MySql Version
#lookupLastInsertId = \
#   select LAST_INSERT_ID()
#HSQL Version
lookupLastInsertId = \
    select IDENTITY() FROM logger
 
